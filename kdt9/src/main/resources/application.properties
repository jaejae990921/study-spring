# spring boot 애플리케이션의 구성 속성을 설정하는 파일
# 키-값값 쌍으로 이루어진다.

# application.properties VS application.yml
# application.properties가 우선순위가 더 높음
# application.yml가 구조를 조금 더 파악하기 좋다. (중복코드가 줄어든다.)
# 차이는 사실상 없다고 봄. 프로젝트 진행 시 둘 중 선택해서 하는게 좋음
# 우선순위에 따라 내용이 덮어씌워질수 있기 때문

#[application.properties]
#spring.test.abc=1
#spring.test.dce=2
#[application.yml]
#spring:
#    test:
#        abc:1
#        dce:2

# 최신버전은 cj 작성
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/kdt9?useUnicode=yes&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Seoul
spring.datasource.username=simson
spring.datasource.password=simson

mybatis.type-aliases-package=com.spring.boot.mapper
mybatis.mapper-locations=mybatis-mapper/*.xml
# resources/ 아래 위치

# [JPA]
# DB의 고유 기능
# SQL문을 확인하겠다.
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
# create : 기존 테이블을 삭제하고 생성하겠다. (drop + create)
# create-drop : 기존 테이블을 삭제하고 생성, 애플리케이션이 종료될 때 삭제 (drop + create + drop)
# update : DB 테이블이랑 Entity 정보를 비교해서 변경사항만 수정 (만약 테이블이 없다면 생성)
# validate : DB 테이블과 Entity 정보를 비교해서 차이가 있으면 error (애플리케이션 실행 X)
# none : 자동생성기능을 사용하지 않겠다.